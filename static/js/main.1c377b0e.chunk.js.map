{"version":3,"sources":["redux/constants/index.js","redux/reducers/contactsReducer.js","redux/store.js","redux/actions/contactsAction.js","Components/Section/Section.js","Components/ContactForm/ContactForm.js","Components/ContactItem/ContactItem.js","Components/Contacts/Contacts.js","App.js","index.js"],"names":["ADD_CONTACT","DELETE_CONTACT","CHANGE_FILTER","CHANGE_ERROR","combineReducers","items","state","type","payload","filter","contact","id","idContact","error","rootReducer","contacts","contactsReducer","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","addContact","name","number","uuidv4","deleteContact","changeFilter","changeError","H1","transition","h1","attrs","unmountOnExit","mountOnEntry","timeout","Section","title","children","useState","showTitle","setShowTitle","useEffect","in","defaultProps","Form","styled","form","Label","label","LabelSpan","span","Input","input","Button","button","formInitialState","mapDispatchToProps","onAddContact","contactsAction","onAddError","connect","setForm","handlerInputChange","e","target","value","prev","autoComplete","onSubmit","preventDefault","every","includes","onChange","P","p","ContactItem","OnDeleteContact","onClick","ContactsDiv","div","Ul","ul","Li","li","onDeleteContact","contactsActios","onChangeFilter","normalizedFilter","toLowerCase","TransitionGroup","component","map","index","Div","onAddContacts","onChangeError","persistedContacts","localStorage","getItem","JSON","parse","forEach","setItem","stringify","setTimeout","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1c377b0e.chunk.js","sourcesContent":["export const ADD_CONTACT = \"contacts/add\";\nexport const DELETE_CONTACT = \"contacts/delete\";\n\nexport const CHANGE_FILTER = \"filter/change\";\nexport const CHANGE_ERROR = \"error/change\";\n","import { combineReducers } from \"redux\";\nimport {\n  ADD_CONTACT,\n  DELETE_CONTACT,\n  CHANGE_FILTER,\n  CHANGE_ERROR,\n} from \"../constants\";\n\nconst items = (state = [], { type, payload }) => {\n  switch (type) {\n    case ADD_CONTACT:\n      return [...state, payload];\n\n    case DELETE_CONTACT:\n      return state.filter((contact) => contact.id !== payload.idContact);\n\n    default:\n      return state;\n  }\n};\nconst filter = (state = \"\", { type, payload }) => {\n  switch (type) {\n    case CHANGE_FILTER:\n      return payload.filter;\n\n    default:\n      return state;\n  }\n};\n\nconst error = (state = \"\", { type, payload }) => {\n  switch (type) {\n    case CHANGE_ERROR:\n      return payload.error;\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  items,\n  filter,\n  error,\n});\n","import { createStore, combineReducers } from \"redux\";\nimport contactsReducer from \"./reducers/contactsReducer\";\n\nconst rootReducer = combineReducers({\n  contacts: contactsReducer,\n});\n\nconst store = createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nexport default store;\n","import { v4 as uuidv4 } from \"uuid\";\n\nimport {\n  ADD_CONTACT,\n  DELETE_CONTACT,\n  CHANGE_FILTER,\n  CHANGE_ERROR,\n} from \"../constants\";\n\nconst addContact = (name, number) => ({\n  type: ADD_CONTACT,\n  payload: {\n    id: uuidv4(),\n    name: name,\n    number: number,\n  },\n});\n\nconst deleteContact = (idContact) => ({\n  type: DELETE_CONTACT,\n  payload: { idContact },\n});\n\nconst changeFilter = (filter) => ({\n  type: CHANGE_FILTER,\n  payload: { filter },\n});\n\nconst changeError = (error) => ({\n  type: CHANGE_ERROR,\n  payload: { error },\n});\n\nexport default {\n  addContact,\n  deleteContact,\n  changeFilter,\n  changeError,\n};\n","import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport transition from \"styled-transition-group\";\n\nconst H1 = transition.h1.attrs({\n  unmountOnExit: true,\n  mountOnEntry: true,\n  timeout: 500,\n})`\n  margin-top: 0;\n  margin-bottom: 20px;\n\n  text-align: center;\n  color: #3645ab;\n\n  font-size: 24px;\n  font-weight: 600;\n  line-height: 22px;\n\n  &:enter { opacity: 0; }\n  &:enter-active {\n    opacity: 1;\n    transition: opacity 500ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n  &:exit { opacity: 1; }\n  &:exit-active {\n    opacity: 0;\n    transition: opacity 500ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n`;\n\nconst Section = ({ title, children }) => {\n  const [showTitle, setShowTitle] = useState(false);\n  useEffect(() => {\n    setShowTitle(true);\n  }, []);\n\n  return (\n    <div>\n      <H1 in={showTitle}>{title}</H1>\n      <div>{children}</div>\n    </div>\n  );\n};\n\nexport default Section;\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.element.isRequired,\n};\n\nSection.defaultProps = {\n  title: \"Title template\",\n};\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport contactsAction from \"../../redux/actions/contactsAction\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Form = styled.form`\n  display: block;\n  margin-top: 0;\n  margin-bottom: 20px;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 25px;\n\n  width: 342px;\n  background: #fff;\n  border: 2px solid #212121;\n  border-radius: 10px;\n`;\nconst Label = styled.label`\n  display: block;\n  margin-top: 0;\n  margin-bottom: 15px;\n\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 17px;\n`;\nconst LabelSpan = styled.span`\n  display: block;\n  margin-left: 15px;\n`;\nconst Input = styled.input`\n  display: block;\n  margin: 0 auto;\n  padding-left: 10px;\n  width: 280px;\n  height: 40px;\n  background: #fff;\n  border: 1px solid #b3b3b3;\n  border-radius: 10px;\n`;\nconst Button = styled.button`\n  display: block;\n  margin: 0 auto;\n\n  padding: 11px 78px;\n\n  min-width: 240px;\n  min-height: 44px;\n\n  border-radius: 10px;\n  border: 2px solid transparent;\n\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.22;\n\n  text-align: center;\n  text-transform: uppercase;\n\n  cursor: pointer;\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    background-image 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  background-image: linear-gradient(47.73deg, #6368e5 15.48%, #b884f3 81.25%);\n  background-position: center;\n  background-size: calc(100% + 4px);\n\n  color: #ffffff;\n\n  &:hover,\n  &:focus {\n    border: 2px solid #6368e5;\n    color: #6368e5;\n    background-image: none;\n    background-color: #ffffff;\n  }\n`;\n\nconst formInitialState = {\n  name: \"\",\n  number: \"\",\n};\n\nconst ContactForm = ({ contacts, onAddContact, onAddError }) => {\n  const [{ name, number }, setForm] = useState({ ...formInitialState });\n\n  const handlerInputChange = (e) => {\n    const { name, value } = e.target;\n    setForm((prev) => ({ ...prev, [name]: value }));\n  };\n\n  const handlerSubmit = (e) => {\n    e.preventDefault();\n    if (!name) {\n      return;\n    }\n    if (contacts.every((contact) => !contact.name.includes(name))) {\n      onAddContact(name, number);\n    } else {\n      onAddError(`${name} is already in contacts!`);\n    }\n    setForm({ ...formInitialState });\n  };\n\n  return (\n    <Form autoComplete=\"on\" onSubmit={handlerSubmit}>\n      <Label>\n        <LabelSpan>Name</LabelSpan>\n        <Input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handlerInputChange}\n        />\n      </Label>\n      <Label>\n        <LabelSpan>Number</LabelSpan>\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handlerInputChange}\n        />\n      </Label>\n      <Button type=\"submit\">Add contact</Button>\n    </Form>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  contacts: state.contacts.items,\n});\n\nconst mapDispatchToProps = {\n  onAddContact: contactsAction.addContact,\n  onAddError: contactsAction.changeError,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n\nContactForm.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  onAddContact: PropTypes.func.isRequired,\n  onAddError: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nconst P = styled.p`\n  display: block;\n  margin-top: 0;\n  margin-bottom: 0;\n\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 17px;\n`;\nconst Button = styled.button`\n  display: block;\n  width: 23px;\n  height: 23px;\n  border: 2px solid transparent;\n  border-radius: 50%;\n\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 17px;\n\n  cursor: pointer;\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    background-image 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  background-image: linear-gradient(47.73deg, #6368e5 15.48%, #b884f3 81.25%);\n  background-position: center;\n  background-size: calc(100% + 4px) calc(100% + 4px);\n\n  color: #ffffff;\n\n  &:hover,\n  &:focus {\n    border: 2px solid #6368e5;\n    color: #6368e5;\n    background-image: none;\n    background-color: #ffffff;\n  }\n`;\n\nconst ContactItem = ({ id, name, number, OnDeleteContact }) => {\n  return (\n    <>\n      <P>\n        {name}: {number}\n      </P>\n      <Button\n        type=\"button\"\n        onClick={(e) => {\n          OnDeleteContact(id);\n        }}\n      >\n        x\n      </Button>\n    </>\n  );\n};\n\nexport default ContactItem;\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  OnDeleteContact: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport contactsActios from \"../../redux/actions/contactsAction\";\nimport ContactItem from \"../ContactItem/ContactItem\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { TransitionGroup } from \"react-transition-group\";\nimport transition from \"styled-transition-group\";\n\nconst ContactsDiv = styled.div`\n  margin-top: 0;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 25px;\n\n  width: 342px;\n  background: #fff;\n  border: 2px solid #212121;\n  border-radius: 10px;\n`;\n\nconst Label = styled.label`\n  display: block;\n  margin-top: 0;\n  margin-bottom: 15px;\n\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 17px;\n`;\nconst LabelSpan = styled.span`\n  display: block;\n  margin-left: 15px;\n`;\nconst Input = styled.input`\n  display: block;\n  margin: 0 auto;\n  padding-left: 10px;\n  width: 280px;\n  height: 40px;\n  background: #fff;\n  border: 1px solid #b3b3b3;\n  border-radius: 10px;\n`;\nconst Ul = styled.ul`\n  padding: 0;\n  list-style: none;\n`;\n\nconst Li = transition.li.attrs({\n  unmountOnExit: true,\n  mountOnEntry: true,\n  timeout: 250,\n})`\n  display: flex;\n  padding: 5px 10px;\n  &:not(:last-child) {\n    margin-bottom: 15px;\n  }\n\n  flex-wrap: nowrap;\n  align-items: center;\n  justify-content: space-between;\n  background-color: #f1f1f1;\n\n  border: 1px solid #b3b3b3;\n  border-radius: 10px;\n\n  &:enter { opacity: 0; \n    transform: translateX(-100%); }\n  &:enter-active {\n    opacity: 1;\n    transform: translateX(0);\n    transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1), transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n  &:exit { opacity: 1;\n  transform: translateX(0); }\n  &:exit-active {\n    opacity: 0;\n    transform: translateX(-100%);\n    transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1), transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n`;\n\nconst Contacts = ({ contacts, onDeleteContact, filter, onChangeFilter }) => {\n  return (\n    <ContactsDiv>\n      <Label>\n        <LabelSpan>Find contacts by name</LabelSpan>\n        <Input\n          type=\"text\"\n          name=\"search\"\n          value={filter}\n          onChange={(e) => onChangeFilter(e.target.value)}\n        />\n      </Label>\n      <TransitionGroup component={Ul}>\n        {contacts.map((contact, index) => (\n          <Li key={contact.id}>\n            <ContactItem\n              {...contact}\n              index={index}\n              OnDeleteContact={() => onDeleteContact(contact.id)}\n            />\n          </Li>\n        ))}\n      </TransitionGroup>\n    </ContactsDiv>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const { items, filter } = state.contacts;\n  const normalizedFilter = filter.toLowerCase();\n  const visibleContacts = items.filter((contact) =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n\n  return {\n    contacts: visibleContacts,\n    filter: state.contacts.filter,\n  };\n};\n\nconst mapDispatchToProps = {\n  onDeleteContact: contactsActios.deleteContact,\n  onChangeFilter: contactsActios.changeFilter,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Contacts);\n\nContacts.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n  filter: PropTypes.string.isRequired,\n  onChangeFilter: PropTypes.func.isRequired,\n};\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport contactsAction from \"./redux/actions/contactsAction\";\nimport Section from \"./Components/Section/Section\";\nimport ContactForm from \"./Components/ContactForm/ContactForm\";\nimport Contacts from \"./Components/Contacts/Contacts\";\nimport transition from \"styled-transition-group\";\nimport PropTypes from \"prop-types\";\n\nconst Div = transition.div.attrs({\n  unmountOnExit: true,\n  mountOnEntry: true,\n  timeout: 250,\n})`\nposition: absolute;\npadding: 5px 10px;\nwidth: 300px;\n\ntop: 10px;\nleft: 10px;\n\nbackground-color: #6368e5;\nborder-radius: 8px;\n\ntext-align: center;\ncolor: white;\n\n  &:enter { opacity: 0; \n    transform: translateX(-100%); }\n  &:enter-active {\n    opacity: 1;\n    transform: translateX(0);\n    transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1), transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n  &:exit { opacity: 1;\n  transform: translateX(0); }\n  &:exit-active {\n    opacity: 0;\n    transform: translateX(-100%);\n    transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1), transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n`;\n\nconst App = ({ contacts, onAddContacts, error, onChangeError }) => {\n  useEffect(() => {\n    const persistedContacts = localStorage.getItem(\"contacts\");\n    if (persistedContacts) {\n      const contacts = JSON.parse(persistedContacts);\n\n      contacts.forEach((contact) =>\n        onAddContacts(contact.name, contact.number)\n      );\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  });\n\n  useEffect(() => {\n    if (error) {\n      setTimeout(() => {\n        onChangeError(\"\");\n      }, 1500);\n    }\n  }, [error]);\n\n  return (\n    <>\n      {\n        <Div in={!!error}>\n          <p>{error}</p>\n        </Div>\n      }\n      <Section title={\"Phonebook\"}>\n        <ContactForm />\n      </Section>\n      <Section title={\"Contacts\"}>\n        <Contacts />\n      </Section>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  contacts: state.contacts.items,\n  error: state.contacts.error,\n});\n\nconst mapDispatchToProps = {\n  onAddContacts: contactsAction.addContact,\n  onChangeError: contactsAction.changeError,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\nApp.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  onAddContacts: PropTypes.func.isRequired,\n  error: PropTypes.string.isRequired,\n  onChangeError: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport store from \"./redux/store\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}